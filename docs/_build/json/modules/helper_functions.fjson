{"sourcename": "modules/helper_functions.rst.txt", "metatags": "", "display_toc": true, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ResolveAbbreviations</a></li>\n<li><a class=\"reference internal\" href=\"#genericrdfparser\">GenericRDFParser</a></li>\n</ul>\n", "page_source_suffix": ".rst", "sidebars": null, "next": null, "customsidebar": null, "title": "ResolveAbbreviations", "current_page_name": "modules/helper_functions", "alabaster_version": "0.7.10", "body": "<div class=\"section\" id=\"resolveabbreviations\">\n<h1>ResolveAbbreviations<a class=\"headerlink\" href=\"#resolveabbreviations\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"helper_functions.abbreviation_solver.ResolveAbbreviations\">\n<em class=\"property\">class </em><code class=\"descclassname\">helper_functions.abbreviation_solver.</code><code class=\"descname\">ResolveAbbreviations</code><span class=\"sig-paren\">(</span><em>text=None</em>, <em>person=None</em>, <em>dictionaries=None</em>, <em>user=None</em>, <em>password=None</em>, <em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/helper_functions/abbreviation_solver/#ResolveAbbreviations\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#helper_functions.abbreviation_solver.ResolveAbbreviations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Used to resolve abbreviations in German Texts. For resolving it uses several resources:</p>\n<ul class=\"simple\">\n<li>A list of German words</li>\n<li>A list of common German abbreviations</li>\n<li>A list of abbreviations used in the Austrian Bibliographic Dictionary (\u00d6BL)</li>\n<li>and an API that allows to query the Austrian Media Corpus (<a class=\"reference external\" href=\"http://www.oeaw.ac.at/acdh/de/amc\">AMC</a>)</li>\n</ul>\n<p><em>Example:</em></p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">abbrev</span> <span class=\"o\">=</span> <span class=\"n\">ResolveAbbreviations</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">&#39;test text&#39;</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;M\u00fcller&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Peter&#39;</span><span class=\"p\">],</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">&#39;user&#39;</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">&#39;pw&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">resolved_text</span> <span class=\"o\">=</span> <span class=\"n\">abbrev</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"n\">always_amc</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>text</strong> (<em>str</em>) &#8211; The text that should be processed (unicode string)</li>\n<li><strong>person</strong> (<em>list</em>) &#8211; List of names of the Person (used to create possible abbreviations of the Person names)</li>\n<li><strong>dictionaries</strong> (<em>str</em><em> or </em><em>tuple</em><em> or </em><em>list</em>) &#8211; Dictionary that should be used additionally</li>\n<li><strong>user</strong> (<em>str</em>) &#8211; User for the sketch engine</li>\n<li><strong>password</strong> (<em>str</em>) &#8211; Password for the sketch engine</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"helper_functions.abbreviation_solver.ResolveAbbreviations.resolve\">\n<code class=\"descname\">resolve</code><span class=\"sig-paren\">(</span><em>always_amc=False</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/helper_functions/abbreviation_solver/#ResolveAbbreviations.resolve\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#helper_functions.abbreviation_solver.ResolveAbbreviations.resolve\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Resolve function. Resolves the abbreviation in the text given in the __init__ function.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>always_amc</strong> &#8211; <em>(Boolean)</em> Specifies whether to also use the AMC for unambiguous abbreviations. Defaults to False.</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">Resolved text.</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\">string</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"genericrdfparser\">\n<h1>GenericRDFParser<a class=\"headerlink\" href=\"#genericrdfparser\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"class\">\n<dt id=\"helper_functions.RDFparsers.GenericRDFParser\">\n<em class=\"property\">class </em><code class=\"descclassname\">helper_functions.RDFparsers.</code><code class=\"descname\">GenericRDFParser</code><span class=\"sig-paren\">(</span><em>uri</em>, <em>kind</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/helper_functions/RDFparsers/#GenericRDFParser\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#helper_functions.RDFparsers.GenericRDFParser\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A generic class for parsing RDFs to the APIS data model and save\nobjects to the db.</p>\n<p>Attributes:</p>\n<ul class=\"simple\">\n<li>self.objct: (object) the object created by the parser</li>\n<li>self.labels: (list) list of labels created by the parser (only saved when self.save() is called)</li>\n<li>self.related_objcts: (list) list of related objects (relations) (only saved when self.save() is called)</li>\n<li>self.kind: (string) kind of entity of the object (Persion, Place, Institution, Work, Event)</li>\n<li>self.uri: (string) uri provided when initializing the object</li>\n<li>self.saved: (boolean) indicates whether the object was saved to the db</li>\n<li>self.created: (boolean) indicates whether the object was created</li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>uri</strong> &#8211; (url) Uri to parse the object from (<a class=\"reference external\" href=\"http://test.at\">http://test.at</a>). The uri must start with a base url mentioned in the RDF parser settings file.</li>\n<li><strong>kind</strong> &#8211; (string) Kind of entity (Person, Place, Institution, Work, Event)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"helper_functions.RDFparsers.GenericRDFParser.get_or_create\">\n<code class=\"descname\">get_or_create</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/helper_functions/RDFparsers/#GenericRDFParser.get_or_create\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#helper_functions.RDFparsers.GenericRDFParser.get_or_create\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">Returns the parsed object. Saves it to the db when needed</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"helper_functions.RDFparsers.GenericRDFParser.merge\">\n<code class=\"descname\">merge</code><span class=\"sig-paren\">(</span><em>m_obj</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/helper_functions/RDFparsers/#GenericRDFParser.merge\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#helper_functions.RDFparsers.GenericRDFParser.merge\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>m_obj</strong> &#8211; the object to merge with (must be an django model object instance)</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">django object saved to db or False if nothing was saved</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"helper_functions.RDFparsers.GenericRDFParser.save\">\n<code class=\"descname\">save</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/helper_functions/RDFparsers/#GenericRDFParser.save\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#helper_functions.RDFparsers.GenericRDFParser.save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\">django object saved to db or False if nothing was saved</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["modules/vocabularies", "Vocabularies", "P", "previous"]], "prev": {"title": "Vocabularies", "link": "../vocabularies/"}, "parents": [{"title": "Internal API", "link": "../../internal_api/"}], "meta": {}}