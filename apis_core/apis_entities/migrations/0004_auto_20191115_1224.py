# Generated by Django 2.1.9 on 2019-11-15 12:24

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('apis_vocabularies', '0003_relationbaseclass_name_reverse_english'),
        ('apis_relations', '0001_initial'),
        ('apis_entities', '0003_auto_20190702_0826'),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='eventB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='eventA_set', through='apis_relations.EventEvent', to='apis_vocabularies.EventEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='eventB_set',
            field=models.ManyToManyField(blank=True, related_name='eventA_set', through='apis_relations.EventEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='event',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.InstitutionEvent', to='apis_vocabularies.InstitutionEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='passage_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.EventPassage', to='apis_vocabularies.EventPassageRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='passage_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.EventPassage', to='apis_entities.Passage'),
        ),
        migrations.AddField(
            model_name='event',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.PersonEvent', to='apis_vocabularies.PersonEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.PlaceEvent', to='apis_vocabularies.PlaceEventRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='publication_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.EventPublication', to='apis_vocabularies.EventPublicationRelation'),
        ),
        migrations.AddField(
            model_name='event',
            name='publication_set',
            field=models.ManyToManyField(blank=True, related_name='event_set', through='apis_relations.EventPublication', to='apis_entities.Publication'),
        ),
        migrations.AddField(
            model_name='institution',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionEvent', to='apis_vocabularies.InstitutionEventRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='event_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='institution',
            name='institutionB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institutionA_set', through='apis_relations.InstitutionInstitution', to='apis_vocabularies.InstitutionInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='institutionB_set',
            field=models.ManyToManyField(blank=True, related_name='institutionA_set', through='apis_relations.InstitutionInstitution', to='apis_entities.Institution'),
        ),
        migrations.AddField(
            model_name='institution',
            name='passage_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPassage', to='apis_vocabularies.InstitutionPassageRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='passage_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPassage', to='apis_entities.Passage'),
        ),
        migrations.AddField(
            model_name='institution',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.PersonInstitution', to='apis_vocabularies.PersonInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPlace', to='apis_vocabularies.InstitutionPlaceRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='place_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPlace', to='apis_entities.Place'),
        ),
        migrations.AddField(
            model_name='institution',
            name='publication_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPublication', to='apis_vocabularies.InstitutionPublicationRelation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='publication_set',
            field=models.ManyToManyField(blank=True, related_name='institution_set', through='apis_relations.InstitutionPublication', to='apis_entities.Publication'),
        ),
        migrations.AddField(
            model_name='passage',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='passage_set', through='apis_relations.EventPassage', to='apis_vocabularies.EventPassageRelation'),
        ),
        migrations.AddField(
            model_name='passage',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='passage_set', through='apis_relations.InstitutionPassage', to='apis_vocabularies.InstitutionPassageRelation'),
        ),
        migrations.AddField(
            model_name='passage',
            name='passageB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='passageA_set', through='apis_relations.PassagePassage', to='apis_vocabularies.PassagePassageRelation'),
        ),
        migrations.AddField(
            model_name='passage',
            name='passageB_set',
            field=models.ManyToManyField(blank=True, related_name='passageA_set', through='apis_relations.PassagePassage', to='apis_entities.Passage'),
        ),
        migrations.AddField(
            model_name='passage',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='passage_set', through='apis_relations.PersonPassage', to='apis_vocabularies.PersonPassageRelation'),
        ),
        migrations.AddField(
            model_name='passage',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='passage_set', through='apis_relations.PlacePassage', to='apis_vocabularies.PlacePassageRelation'),
        ),
        migrations.AddField(
            model_name='passage',
            name='publication_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='passage_set', through='apis_relations.PassagePublication', to='apis_vocabularies.PassagePublicationRelation'),
        ),
        migrations.AddField(
            model_name='passage',
            name='publication_set',
            field=models.ManyToManyField(blank=True, related_name='passage_set', through='apis_relations.PassagePublication', to='apis_entities.Publication'),
        ),
        migrations.AddField(
            model_name='person',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonEvent', to='apis_vocabularies.PersonEventRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='event_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='person',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonInstitution', to='apis_vocabularies.PersonInstitutionRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='institution_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonInstitution', to='apis_entities.Institution'),
        ),
        migrations.AddField(
            model_name='person',
            name='passage_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPassage', to='apis_vocabularies.PersonPassageRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='passage_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPassage', to='apis_entities.Passage'),
        ),
        migrations.AddField(
            model_name='person',
            name='personB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='personA_set', through='apis_relations.PersonPerson', to='apis_vocabularies.PersonPersonRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='personB_set',
            field=models.ManyToManyField(blank=True, related_name='personA_set', through='apis_relations.PersonPerson', to='apis_entities.Person'),
        ),
        migrations.AddField(
            model_name='person',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPlace', to='apis_vocabularies.PersonPlaceRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='place_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPlace', to='apis_entities.Place'),
        ),
        migrations.AddField(
            model_name='person',
            name='publication_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPublication', to='apis_vocabularies.PersonPublicationRelation'),
        ),
        migrations.AddField(
            model_name='person',
            name='publication_set',
            field=models.ManyToManyField(blank=True, related_name='person_set', through='apis_relations.PersonPublication', to='apis_entities.Publication'),
        ),
        migrations.AddField(
            model_name='place',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceEvent', to='apis_vocabularies.PlaceEventRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='event_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlaceEvent', to='apis_entities.Event'),
        ),
        migrations.AddField(
            model_name='place',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.InstitutionPlace', to='apis_vocabularies.InstitutionPlaceRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='passage_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlacePassage', to='apis_vocabularies.PlacePassageRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='passage_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlacePassage', to='apis_entities.Passage'),
        ),
        migrations.AddField(
            model_name='place',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PersonPlace', to='apis_vocabularies.PersonPlaceRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='placeB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='placeA_set', through='apis_relations.PlacePlace', to='apis_vocabularies.PlacePlaceRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='placeB_set',
            field=models.ManyToManyField(blank=True, related_name='placeA_set', through='apis_relations.PlacePlace', to='apis_entities.Place'),
        ),
        migrations.AddField(
            model_name='place',
            name='publication_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlacePublication', to='apis_vocabularies.PlacePublicationRelation'),
        ),
        migrations.AddField(
            model_name='place',
            name='publication_set',
            field=models.ManyToManyField(blank=True, related_name='place_set', through='apis_relations.PlacePublication', to='apis_entities.Publication'),
        ),
        migrations.AddField(
            model_name='publication',
            name='event_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='publication_set', through='apis_relations.EventPublication', to='apis_vocabularies.EventPublicationRelation'),
        ),
        migrations.AddField(
            model_name='publication',
            name='institution_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='publication_set', through='apis_relations.InstitutionPublication', to='apis_vocabularies.InstitutionPublicationRelation'),
        ),
        migrations.AddField(
            model_name='publication',
            name='passage_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='publication_set', through='apis_relations.PassagePublication', to='apis_vocabularies.PassagePublicationRelation'),
        ),
        migrations.AddField(
            model_name='publication',
            name='person_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='publication_set', through='apis_relations.PersonPublication', to='apis_vocabularies.PersonPublicationRelation'),
        ),
        migrations.AddField(
            model_name='publication',
            name='place_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='publication_set', through='apis_relations.PlacePublication', to='apis_vocabularies.PlacePublicationRelation'),
        ),
        migrations.AddField(
            model_name='publication',
            name='publicationB_relationtype_set',
            field=models.ManyToManyField(blank=True, related_name='publicationA_set', through='apis_relations.PublicationPublication', to='apis_vocabularies.PublicationPublicationRelation'),
        ),
        migrations.AddField(
            model_name='publication',
            name='publicationB_set',
            field=models.ManyToManyField(blank=True, related_name='publicationA_set', through='apis_relations.PublicationPublication', to='apis_entities.Publication'),
        ),
    ]
